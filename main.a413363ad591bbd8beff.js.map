{"version":3,"sources":["webpack:///./js/constants.js","webpack:///./js/bgc-switcher.js"],"names":["refs","startBtn","document","querySelector","stopBtn","body","addEventListener","bgcTimer","start","stop","onTick","this","intervalId","isActive","setInterval","console","log","changeBgc","clearInterval","style","backgroundColor","colors","randomIntegerFromInterval","length","min","max","Math","floor","random"],"mappings":"kHAAe,GACf,UACA,UACA,UACA,UACA,UACA,WAIaA,EAAO,CAChBC,SAAUC,SAASC,cAAc,6BACjCC,QAASF,SAASC,cAAc,4BAChCE,KAAMH,SAASG,MCXnBL,EAAKC,SAASK,iBAAiB,SAAS,WAAQC,EAASC,WACzDR,EAAKI,QAAQE,iBAAiB,SAAS,WAAQC,EAASE,U,IA6BlDF,EAAW,I,WAzBb,cAAsB,IAATG,EAAS,EAATA,OACTC,KAAKC,WAAa,KAClBD,KAAKE,UAAW,EACZF,KAAKD,OAASA,E,2BAGlBF,MAAA,WAAQ,WACRG,KAAKE,WAITF,KAAKE,UAAW,EACZF,KAAKC,WAAaE,aAAY,WAC9B,EAAKJ,SACLK,QAAQC,IAAIC,OACb,O,EAGLR,KAAA,WACES,cAAcP,KAAKC,YACbD,KAAKE,UAAW,EAChBb,EAAKK,KAAKc,MAAMC,gBAAkB,e,KAI3B,CAAa,CACtBV,OAAQO,IAGhB,SAASA,IAEL,OADAjB,EAAKK,KAAKc,MAAMC,gBAAkBC,EAAOC,EAA2B,EAAGD,EAAOE,OAAQ,IAC/EvB,EAAKK,KAAKc,MAAMC,gBAG3B,IAAME,EAA4B,SAAEE,EAAKC,GACrC,OAAOC,KAAKC,MAAOD,KAAKE,UAAaH,EAAMD,EAAM,GAAMA,K","file":"main.a413363ad591bbd8beff.js","sourcesContent":["export default [\r\n'#FFFFFF',\r\n'#2196F3',\r\n'#4CAF50',\r\n'#FF9800',\r\n'#009688',\r\n'#795548',\r\n];\r\n\r\n\r\nexport const refs = {\r\n    startBtn: document.querySelector('button[data-action=start]'),\r\n    stopBtn: document.querySelector('button[data-action=stop]'),\r\n    body: document.body,\r\n};\r\n\r\n// console.log(refs.startBtn);\r\n// console.log(refs.stopBtn);","import colors, { refs } from './constants'\r\n\r\nrefs.startBtn.addEventListener('click', () => { bgcTimer.start() });\r\nrefs.stopBtn.addEventListener('click', () => { bgcTimer.stop() });\r\n\r\n\r\nclass BgcTimer {\r\n    constructor({onTick}) {\r\n        this.intervalId = null;\r\n        this.isActive = false;\r\n            this.onTick = onTick;\r\n        }\r\n\r\n        start() {\r\n    if (this.isActive) {\r\n        return;\r\n    }\r\n                \r\n    this.isActive = true;\r\n        this.intervalId = setInterval(() => {\r\n        this.onTick();\r\n        console.log(changeBgc())\r\n    }, 1000);\r\n        }\r\n        \r\n  stop() {\r\n    clearInterval(this.intervalId);\r\n          this.isActive = false;\r\n          refs.body.style.backgroundColor = \"transparent\";\r\n  }\r\n}\r\n\r\nconst bgcTimer = new BgcTimer({\r\n        onTick: changeBgc,\r\n})\r\n\r\nfunction changeBgc() {\r\n    refs.body.style.backgroundColor = colors[randomIntegerFromInterval( 0, colors.length -1 )];\r\n    return refs.body.style.backgroundColor;\r\n}\r\n\r\nconst randomIntegerFromInterval = ( min, max ) => {\r\n    return Math.floor( Math.random() * ( max - min + 1 ) + min );\r\n};\r\n\r\n\r\n\r\n\r\n//  //------------- Without Class\r\n// refs.startBtn.addEventListener('click', () => {bgcTimer.start()});\r\n// refs.stopBtn.addEventListener('click', () => { bgcTimer.stop() });\r\n\r\n// const bgcTimer = {\r\n//   intervalId: null,\r\n//   isActive: false,\r\n//   start() {\r\n//     if (this.isActive) {\r\n//         return;\r\n//     }\r\n                \r\n//     this.isActive = true;\r\n//     this.intervalId = setInterval(() => {\r\n//       changeBgc();\r\n//       console.log(changeBgc())\r\n//     }, 1000);\r\n//   },\r\n//   stop() {\r\n//     clearInterval(this.intervalId);\r\n//     this.isActive = false;\r\n//       refs.body.style.backgroundColor = \"transparent\";\r\n//   }\r\n// }\r\n\r\n// function changeBgc() {\r\n//     refs.body.style.backgroundColor = colors[randomIntegerFromInterval( 0, colors.length -1 )];\r\n//     return refs.body.style.backgroundColor;\r\n// }\r\n\r\n// const randomIntegerFromInterval = ( min, max ) => {\r\n//     return Math.floor( Math.random() * ( max - min + 1 ) + min );\r\n// };\r\n// console.log(changeBgc());"],"sourceRoot":""}